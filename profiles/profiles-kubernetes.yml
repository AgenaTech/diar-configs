server:
  port: 8989
spring:
  kafka:
    enabled: true
    bootstrap-servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
    properties:
      security.protocol: SSL
    producer:
      bootstrap-servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: profile:com.agenatech.solutions.profiles.model.UserProfile
    topic:
      name: user-profile
      replicas: 2
      partitions: 3
    consumer:
      group-id: profiles
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      step-topic.name: step-update-request
      payment-topic.name: client-payments
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: step:com.agenatech.solutions.profiles.client.kafka.consumer.payload.StepUpdateDto,payment:com.agenatech.solutions.profiles.client.kafka.consumer.payload.PaymentEventDto
        bootstrap.servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
        security.protocol: SSL
        session.timeout.ms: 45000

  datasource:
    url: jdbc:postgresql://database-dev-1.co7q08si9fnn.eu-north-1.rds.amazonaws.com:5432/profiles?ssl=false
    username: postgres
    password: '{cipher}343c6565adc705290de2fc08085115b01920d8a9bc7bf5d745f64270d16f175e587ad17756561b5824053f6af8d71fac'
    hikari:
      maximum-pool-size: 5
      initial-pool-size: 1
      connection-timeout: 20000
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache.redisson:
          entity.expiration.max_idle_time: 604800000
          config: redisson-dev.yml

    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      cache:
        use_second_level_cache: true
        factory_class: org.redisson.hibernate.RedissonRegionFactory
        redisson:
          fallback: true

  redis:
    ssl: true
    redisson:
      config: |
        masterSlaveServersConfig:
          retryAttempts: 3
          retryInterval: 1500
          loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}
          masterAddress: "redis://development-001.7rswex.0001.eun1.cache.amazonaws.com:6379"
          slaveAddresses:
            - "redis://development-002.7rswex.0001.eun1.cache.amazonaws.com:6379"
            - "redis://development-003.7rswex.0001.eun1.cache.amazonaws.com:6379"



notifications:
  url: http://notification-service

calendly:
  organization-id: 9b1093f4-7238-45bb-82f1-cd7d3278bf04
  key: '{cipher}e745d29bde623b55c009597bba9a1625f50a3a3c7882093bd31034b0973055e61d4ee30fec8b88e10abd2ccfc177383460295520285c7d97e6a1de7fbaea420e4277dfa216e01837a490c3d724b201632cc7251bbf88c14184b382918bd19b4e243ff3df0944dd6961a1a49abba7971922d903e2dd5196db824cd75f7f88512692841bf663948dfcd8ad942774d9282f7ffa1654352550ad7299ba7cbd0c4a190b3a31956caa3db02c51c82e02e42bf3c62d4ca9887fdad6535b4f93124faa713ac3b53f43e2d1629a0ff257b5a2498a52a96f505c60ca9d643d594439a82d0f1861c5b07a70cfa940cff029b38cb79d474388187684706760af995ab9eda6702f17d3b485602dd1ee26aeb977e7509498fbe23adbcc34452f94eb162aae119ff087dddfd9392df66acb3c96793a77bbd64b456ccc4851420c8c60720241ca05f313f001aafdbc28d582d8059d392870b4fec83bced280f1c6c1caa12e975d769bcf4ad780f582080302f1e86d1cc4208d37966b5351c8d79fa0db20358ade792a2590471614a958eb566297d35df65d2ee8803dcac08ce1c1211155f88cc12cd5729028364a2a295b34e13dc717806ca3bc3c66f218865f7d86d0dc9595a3ef'
