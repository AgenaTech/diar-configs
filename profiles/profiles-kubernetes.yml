server:
  port: 8989
spring:
  kafka:
    enabled: true
    bootstrap-servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
    properties:
      security.protocol: SSL
    producer:
      bootstrap-servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: profile:com.agenatech.solutions.profiles.model.UserProfile
    topic:
      name: user-profile
      replicas: 2
      partitions: 3
    consumer:
      group-id: profiles
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      step-topic.name: step-update-request
      payment-topic.name: client-payments
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: step:com.agenatech.solutions.profiles.client.kafka.consumer.payload.StepUpdateDto,payment:com.agenatech.solutions.profiles.client.kafka.consumer.payload.PaymentEventDto
        bootstrap.servers: b-1.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094, b-2.kafkadev.ew7c9m.c2.kafka.eu-north-1.amazonaws.com:9094
        security.protocol: SSL
        session.timeout.ms: 45000

  datasource:
    url: jdbc:postgresql://database-dev-1.co7q08si9fnn.eu-north-1.rds.amazonaws.com:5432/profiles?ssl=false
    username: postgres
    password: '{cipher}343c6565adc705290de2fc08085115b01920d8a9bc7bf5d745f64270d16f175e587ad17756561b5824053f6af8d71fac'
    hikari:
      maximum-pool-size: 5
      initial-pool-size: 1
      connection-timeout: 20000
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache.redisson:
          entity.expiration.max_idle_time: 604800000
          config: redisson-dev.yml

    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      cache:
        use_second_level_cache: false
        factory_class: org.redisson.hibernate.RedissonRegionFactory
        redisson:
          fallback: true

  redis:
    ssl: true
    redisson:
      config: |
        masterSlaveServersConfig:
          retryAttempts: 3
          retryInterval: 1500
          loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}
          masterAddress: "redis://development-001.7rswex.0001.eun1.cache.amazonaws.com:6379"
          slaveAddresses:
            - "redis://development-002.7rswex.0001.eun1.cache.amazonaws.com:6379"
            - "redis://development-003.7rswex.0001.eun1.cache.amazonaws.com:6379"



notifications:
  url: http://notification-service

calendly:
  key: '{cipher}70867581f155de8bd2f37b963b28ef8bc2d61af585a193a49670cc7f18751ef4d7faa1388d3b5ca29bea365af4ad1e3f70c81deae6cf43bf7fbb80b0dc276560295db3a059af039b6763701ffd65b7a78d6ae8e5c545bf882e287b5728d9583c1ab85001b0404f25fbed3ef5c500953e1113e888f11d5c759570cf0c0b861b4d19de7da840662b7d7da7573a25380d036c6462e9f737df99740cbde3f6ddae52f3e36e644855690335525b32ad11fc7ea4bb4ea7d43e9021b2ee9ad408ec933cc2233580d4a0001806a96b3185c4acb2fe0c2f8e79d89526fc6ebb6b845c67fe671ba1c1d54a727d5b03af5e1f6a1f0f943adbe810677659ac5ff29d99614998e423a9be5d931bf80d9f0025314ecaa549c419d8c3e0edbfe8e7ad21be545edef4465ad7596c8c1097bbed58ee984c92c4d7500456bda680cb6cb9853711a9ea268e187ae7560c8e3a61a3a51610797956fa080e46c0eae742d52cf51535dd23070d6f0473e2f33c8a81a5a32571a50b39339ea4fe7f7fc69ed6e6b37e80cceba784ca56db3f84c69e58e44368516057928c54fd51d661fc0bb88aab6b8116148051f1ba9b266b2f885f792596f873de47040665df9d158382a9303054354360'
